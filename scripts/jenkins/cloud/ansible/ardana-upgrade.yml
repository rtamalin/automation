#
# (c) Copyright 2018 SUSE LLC
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#

---

- name: Upgrade ardana
  hosts: "{{ cloud_env }}"
  remote_user: ardana
  gather_facts: True
  vars:
    task: "upgrade"

  pre_tasks:
    - include_role:
        name: rocketchat_notify
      vars:
        rc_action: "started"
        rc_state: "Started"
      when: rc_notify

  tasks:
    - block:
        # disabled/remove existing repos
        - debug: var=cloudsource
        - debug: var=extra_repos
        - debug: var=upgrade_cloudsource
        - debug: var=upgrade_to_extra_repos

        - name: Disable/remove repos for old cloudsource
          include_role:
            name: setup_zypper_repos
          vars:
            ansible_become: yes
            target_distribution_version: 12.3
            zypper_repo_enabled: no
            zypper_repo_state: absent

        - name: Remove PTF repo associated with old cloudsource
          become: yes
          zypper_repository:
            name: PTF
            state: absent

        - debug: var=cloudsource
        - debug: var=extra_repos

        - name: Add repos for upgrade_cloudsource
          include_role:
            name: setup_zypper_repos
          vars:
            ansible_become: yes
            target_cloudsource: "{{ upgrade_cloudsource }}"
            target_cloud_release: "cloud{{ upgrade_cloudsource | regex_search('\\d') }}"
            target_distribution_version: 12.4

        - include_role:
            name: ardana_update
            tasks_from: upgrade_main

      rescue:
        - include_role:
            name: rocketchat_notify
          vars:
            rc_action: "finished"
            rc_state: "Failed"
          when: rc_notify

        - name: Stop if something failed
          fail:
            msg: "{{ task }} failed."
      always:
        - include_role:
            name: jenkins_artifacts
          when: lookup("env", "WORKSPACE")

  post_tasks:
    - include_role:
        name: rocketchat_notify
      vars:
        rc_action: "finished"
        rc_state: "Success"
      when: rc_notify
